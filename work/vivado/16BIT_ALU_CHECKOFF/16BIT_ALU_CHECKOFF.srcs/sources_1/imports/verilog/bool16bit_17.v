/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module bool16bit_17 (
    input [15:0] a,
    input [15:0] b,
    input [3:0] alufn30,
    output reg [15:0] out
  );
  
  
  
  reg [31:0] selector;
  
  integer i;
  
  always @* begin
    out = 1'h0;
    for (i = 1'h0; i < 5'h10; i = i + 1) begin
      selector[(i)*2+1+0-:1] = b[(i)*1+0-:1];
      selector[(i)*2+0+0-:1] = a[(i)*1+0-:1];
    end
    for (i = 1'h0; i < 5'h10; i = i + 1) begin
      
      case (selector[(i)*2+1-:2])
        2'h0: begin
          out[(i)*1+0-:1] = alufn30[0+0-:1];
        end
        2'h1: begin
          out[(i)*1+0-:1] = alufn30[1+0-:1];
        end
        2'h2: begin
          out[(i)*1+0-:1] = alufn30[2+0-:1];
        end
        2'h3: begin
          out[(i)*1+0-:1] = alufn30[3+0-:1];
        end
      endcase
    end
  end
endmodule
