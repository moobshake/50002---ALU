/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module fsm_COMBINE_4 (
    input clk,
    input rst,
    input [1:0] button,
    input [23:0] in,
    output reg [15:0] aluOut,
    output reg [31:0] displayOUT,
    output reg [5:0] opOUT,
    output reg inputMode
  );
  
  
  
  wire [16-1:0] M_manual_aluOut;
  wire [32-1:0] M_manual_displayOUT;
  wire [6-1:0] M_manual_opOUT;
  reg [2-1:0] M_manual_button;
  reg [24-1:0] M_manual_in;
  fsm_MANUAL_7 manual (
    .clk(clk),
    .rst(rst),
    .button(M_manual_button),
    .in(M_manual_in),
    .aluOut(M_manual_aluOut),
    .displayOUT(M_manual_displayOUT),
    .opOUT(M_manual_opOUT)
  );
  wire [16-1:0] M_auto_aluOut;
  wire [32-1:0] M_auto_displayOUT;
  wire [6-1:0] M_auto_opOUT;
  wire [1-1:0] M_auto_inputMode;
  reg [2-1:0] M_auto_button;
  reg [24-1:0] M_auto_in;
  fsm_AUTO_8 auto (
    .clk(clk),
    .rst(rst),
    .button(M_auto_button),
    .in(M_auto_in),
    .aluOut(M_auto_aluOut),
    .displayOUT(M_auto_displayOUT),
    .opOUT(M_auto_opOUT),
    .inputMode(M_auto_inputMode)
  );
  reg [15:0] M_show_d, M_show_q = 1'h0;
  reg [31:0] M_display_d, M_display_q = 1'h0;
  reg [5:0] M_aluFN_d, M_aluFN_q = 1'h0;
  localparam MANUAL_brain = 1'd0;
  localparam AUTO_brain = 1'd1;
  
  reg M_brain_d, M_brain_q = MANUAL_brain;
  
  always @* begin
    M_brain_d = M_brain_q;
    M_display_d = M_display_q;
    M_show_d = M_show_q;
    M_aluFN_d = M_aluFN_q;
    
    M_manual_button = button;
    M_manual_in = in;
    M_auto_button = button;
    M_auto_in = in;
    aluOut = M_show_q;
    displayOUT = M_display_q;
    opOUT = M_aluFN_q;
    inputMode = M_auto_inputMode;
    
    case (M_brain_q)
      MANUAL_brain: begin
        if (button[0+0-:1]) begin
          M_show_d[0+15-:16] = 1'h0;
          M_brain_d = AUTO_brain;
        end else begin
          M_show_d = M_manual_aluOut;
          M_display_d = M_manual_displayOUT;
          M_aluFN_d = M_manual_opOUT;
        end
      end
      AUTO_brain: begin
        if (button[0+0-:1]) begin
          M_show_d[0+15-:16] = 1'h0;
          M_brain_d = MANUAL_brain;
        end else begin
          M_show_d = M_auto_aluOut;
          M_display_d = M_auto_displayOUT;
          M_aluFN_d = M_auto_opOUT;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_brain_q <= M_brain_d;
    
    if (rst == 1'b1) begin
      M_show_q <= 1'h0;
      M_display_q <= 1'h0;
      M_aluFN_q <= 1'h0;
    end else begin
      M_show_q <= M_show_d;
      M_display_q <= M_display_d;
      M_aluFN_q <= M_aluFN_d;
    end
  end
  
endmodule
